name: CI/CD

on: push

jobs:
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: ["ubuntu-latest"]
        go-version: ["1.18", "1.19"]

    steps:
      - uses: actions/checkout@v2

      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - name: Run tests
        env:
          CGO_ENABLED: 0
        run: go test ./...

  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: ["ubuntu-latest"]
        go-version: ["1.19"]
        go-os-arch:
          [
            "linux/amd64",
            "linux/arm64",
            "linux/arm",
            "windows/amd64",
            "darwin/amd64",
            "darwin/arm64",
          ]

    steps:
      - uses: actions/checkout@v2

      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - name: Generate Env Vars
        env:
          IFS: "/"
        run: |
          echo "COMP_GOOS=$(echo ${{ matrix.go-os-arch }} | cut -d/ -f1 -)" >> $GITHUB_ENV
          echo "COMP_GOARCH=$(echo ${{ matrix.go-os-arch }} | cut -d/ -f2 -)" >> $GITHUB_ENV
      - name: Set suffix (windows)
        if: contains(matrix.go-os-arch, 'windows')
        run: echo "EXEC_SUFFIX=.exe" >> $GITHUB_ENV

      - name: Set suffix (literally everything else)
        if: "!contains(matrix.go-os-arch, 'windows')"
        run: echo "EXEC_SUFFIX=$("")" >> $GITHUB_ENV

      - name: Set version for ldflags (tag ref)
        if: startsWith(github.ref, 'refs/tags/')
        run: echo "LDFLAGS_VERSION=$(echo ${GITHUB_REF:10})" >> $GITHUB_ENV

      - name: Set version for ldflags (non-tag ref)
        if: "!startsWith(github.ref, 'refs/tags/')"
        # Makes the embedded version "{branch-name}-development"
        run: echo "LDFLAGS_VERSION=$(echo ${GITHUB_REF:11})-development" >> $GITHUB_ENV

      - name: Build executable
        env:
          CGO_ENABLED: 0
          GOARM: 7
          GOOS: ${{ env.COMP_GOOS }}
          GOARCH: ${{ env.COMP_GOARCH }}
        run: go build -o trackdeviceauth-${{ env.COMP_GOOS }}-${{ env.COMP_GOARCH }}${{ env.EXEC_SUFFIX }} ./cmd/main.go

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: trackdeviceauth-${{ env.COMP_GOOS }}-${{ env.COMP_GOARCH }}${{ env.EXEC_SUFFIX }}
          path: ${{ github.workspace }}/trackdeviceauth-${{ env.COMP_GOOS }}-${{ env.COMP_GOARCH }}${{ env.EXEC_SUFFIX }}

  upload-binaries-to-gh-releases:
    runs-on: ubuntu-latest
    needs: [test, build]
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          path: ${{ github.workspace }}/build-artifacts

      - name: Set PREREL environment variable
        env:
          TAG: ${{ github.ref }}
        run: echo "PREREL=$(if [[ $TAG =~ "alpha" ]] || [[ $TAG =~ "beta" ]] || [[ $TAG =~ "rc" ]]; then echo "true"; else echo "false"; fi;)" >> $GITHUB_ENV

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ github.workspace }}/build-artifacts/*/*
          name: Release ${{ github.ref }}
          prerelease: ${{ env.PREREL }}
          generate_release_notes: true
          draft: true
